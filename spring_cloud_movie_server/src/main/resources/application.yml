server:
  port: 8086
spring:
  application:
    name: provider-movie
logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    com.coco.client.UserFeignClient: DEBUG   # 将feign客户端的日志级别设置为debug级别，因为feign的日志只对debug级别的日志起作用.
eureka:  # 注册服务节点到eureka
  client:
    service-url:
      defaultZone: http://user:password123@localhost:8081/eureka/,http://user:password123@localhost:8082/eureka/   #将服务节点注册到eureka集群上,带有用户认证信息
    healthcheck:
      enabled: true   #开启健康检查状态
  instance:
    prefer-ip-address: true  #将服务节点的ip注册到eureka server上

management:
  endpoint:
    health:
      show-details: always   # 设置actuator是否展示健康检查详情
    web:
      exposure:
        include: metrics,'hystrix.stream'    # 暴露metrics端点，如需暴露多个，用,分隔；如需暴露所有端点，用'*'

info:    #添加actuator监控的端点信息，通过http://localhost:8080/info访问
  app:
    name: "@project.artifactId@"
    encoding: "@project.build.sourceEncoding@"
    java:
      source: "@java.version@"
      target: "@java.version@"

# 从Spring Cloud Edgware开始，Feign支持使用属性自定义Feign。
feign:
  hystrix:  #  默认Feign是不启用Hystrix的，需要添加配置启用Hystrix（这是全局配置）
    enabled: true
  client:
    config:
      provider-user:   # 应用级别力度的配置，如果要设置通用的，则咋此设置为default（同时，实用配置属性优先于使用java配置属性）
        connectTimeout: 5000  # 连接超时，相当于Request.Options
        readTimeout: 5000     # 读取超时，相当于Request.Options
        # 配置Feign的日志级别，相当于代码配置方式中的Logger
        loggerLevel: full
        # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
        errorDecoder: com.example.SimpleErrorDecoder
        # 配置重试，相当于代码配置方式中的Retryer，一般不建议使用feign的重试器，默认使用ribbon的重试器
        retryer: com.example.SimpleRetryer
        # 配置拦截器，相当于代码配置方式中的RequestInterceptor
         requestInterceptors:
          - com.example.FooRequestInterceptor
          - com.example.BarRequestInterceptor
        decode404: false


provider-user:   #可以以应用的维度来设置负载均衡规则（属性配置的规则优于代码配置，全局配置则把服务名去掉即可）
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule   #设置负载均衡规则为随机
ribbon:   #设置ribbon为饥饿加载策略，初始化就加载ribbon（默认为懒加载机制）
  eager-load:
    enabled: true
    clients: provider-user